"""
Utilidades para generar recomendaciones nutricionales personalizadas.
Este m√≥dulo contiene la l√≥gica de negocio para generar recomendaciones
basadas en el estado nutricional del ni√±o.
"""
from typing import List


def generar_recomendaciones_nutricionales(clasificacion: str, imc: float, edad_meses: int) -> List[str]:
    """
    Genera recomendaciones personalizadas basadas en el estado nutricional.
    
    Args:
        clasificacion: Clasificaci√≥n nutricional (DESNUTRICION_SEVERA, DESNUTRICION, etc.)
        imc: √çndice de masa corporal
        edad_meses: Edad del ni√±o en meses
        
    Returns:
        Lista de recomendaciones espec√≠ficas
    """
    recomendaciones = []
    edad_anios = edad_meses // 12
    
    if clasificacion == "DESNUTRICION_SEVERA":
        recomendaciones = [
            "‚ö†Ô∏è URGENTE: Consulta inmediata con pediatra o nutricionista especializado",
            "Evaluaci√≥n m√©dica completa para descartar enfermedades subyacentes",
            "Plan de recuperaci√≥n nutricional supervisado por profesional de salud",
            "Alimentaci√≥n frecuente (cada 2-3 horas) con alimentos de alta densidad energ√©tica",
            "Suplementaci√≥n nutricional bajo supervisi√≥n m√©dica",
            "Monitoreo semanal de peso y talla durante la recuperaci√≥n",
            "Considerar hospitalizaci√≥n si hay complicaciones asociadas"
        ]
    
    elif clasificacion == "DESNUTRICION":
        recomendaciones = [
            "‚ö†Ô∏è Consulta con nutricionista pedi√°trico en los pr√≥ximos 7 d√≠as",
            "Aumentar frecuencia de comidas a 5-6 veces al d√≠a",
            "Incluir alimentos ricos en prote√≠nas: carnes magras, huevos, l√°cteos, legumbres",
            "Agregar grasas saludables: palta, frutos secos, aceite de oliva",
            "Enriquecer preparaciones con leche en polvo, queso rallado",
            "Evitar l√≠quidos antes de las comidas para no reducir el apetito",
            "Monitoreo de peso cada 2 semanas",
            "Evaluar suplementaci√≥n vitam√≠nica con profesional de salud"
        ]
    
    elif clasificacion == "RIESGO":
        recomendaciones = [
            "Consulta nutricional preventiva recomendada",
            "Aumentar gradualmente las porciones de alimentos",
            "Incluir meriendas saludables entre comidas principales",
            "Priorizar alimentos nutritivos: frutas, verduras, prote√≠nas, l√°cteos",
            "Asegurar 3 comidas principales + 2 meriendas al d√≠a",
            "Limitar consumos de bebidas azucaradas y alimentos procesados",
            "Monitoreo mensual de crecimiento",
            "Fomentar actividad f√≠sica adecuada para la edad"
        ]
    
    elif clasificacion == "NORMAL":
        recomendaciones = [
            "‚úÖ Mantener alimentaci√≥n balanceada y variada actual",
            "Continuar con 3 comidas principales y 2 meriendas saludables",
            "Incluir diariamente: frutas, verduras, prote√≠nas, l√°cteos y cereales integrales",
            "Hidrataci√≥n adecuada con agua (evitar bebidas azucaradas)",
            "Fomentar actividad f√≠sica regular seg√∫n edad",
            "Limitar consumo de alimentos ultraprocesados y comida r√°pida",
            "Monitoreo de crecimiento cada 3-6 meses",
            "Mantener buenos h√°bitos alimenticios y horarios regulares"
        ]
    
    elif clasificacion == "SOBREPESO":
        recomendaciones = [
            "Consulta con nutricionista para plan alimentario personalizado",
            "Reducir porciones gradualmente sin eliminar grupos alimenticios",
            "Aumentar consumo de frutas y verduras frescas",
            "Limitar alimentos altos en az√∫cares y grasas saturadas",
            "Evitar bebidas azucaradas, jugos procesados y gaseosas",
            "Incrementar actividad f√≠sica: m√≠nimo 60 minutos diarios",
            "Establecer horarios regulares de comida (evitar picoteos)",
            "Involucrar a toda la familia en cambios de estilo de vida",
            "Monitoreo mensual de peso y control cada 2 meses"
        ]
    
    elif clasificacion == "OBESIDAD":
        recomendaciones = [
            "‚ö†Ô∏è Consulta prioritaria con nutricionista y pediatra",
            "Evaluaci√≥n m√©dica completa para descartar comorbilidades",
            "Plan de alimentaci√≥n individualizado y supervisado",
            "Reducir consumo de alimentos ultraprocesados y az√∫cares a√±adidos",
            "Eliminar bebidas azucaradas y reemplazar por agua",
            "Aumentar actividad f√≠sica progresivamente (iniciar con 30 min/d√≠a)",
            "Modificar h√°bitos familiares de alimentaci√≥n y actividad f√≠sica",
            "Apoyo psicol√≥gico si es necesario para manejo emocional",
            "Monitoreo quincenal inicial, luego mensual",
            "Evaluaci√≥n de factores metab√≥licos (glucosa, l√≠pidos) con m√©dico"
        ]
    
    else:
        recomendaciones = [
            "Consulta con profesional de salud para evaluaci√≥n personalizada",
            "Mantener alimentaci√≥n equilibrada y variada",
            "Monitoreo regular de crecimiento y desarrollo"
        ]
    
    # Agregar recomendaciones espec√≠ficas por edad
    if edad_meses < 24:  # Menores de 2 a√±os
        recomendaciones.append("üí° Lactancia materna exclusiva hasta los 6 meses (si aplica)")
        recomendaciones.append("Introducci√≥n progresiva de alimentos complementarios despu√©s de 6 meses")
    elif edad_anios < 5:  # 2-5 a√±os
        recomendaciones.append("üí° Fomentar autonom√≠a en la alimentaci√≥n con supervisi√≥n")
        recomendaciones.append("Presentar alimentos de forma atractiva y variada")
    elif edad_anios < 12:  # 5-12 a√±os
        recomendaciones.append("üí° Educar sobre elecciones alimentarias saludables")
        recomendaciones.append("Involucrar en preparaci√≥n de alimentos saludables")
    else:  # Adolescentes
        recomendaciones.append("üí° Promover imagen corporal positiva y autoestima")
        recomendaciones.append("Educaci√≥n nutricional para autonom√≠a alimentaria")
    
    return recomendaciones
